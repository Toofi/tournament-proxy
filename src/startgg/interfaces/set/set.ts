import { Slot } from "./slot";
import { SubState } from "./substate";

export interface Sets {
  id: number;
  eventId: number;
  phaseGroupId: number;
  stationId?: any;
  streamId?: any;
  entrant1Id: number;
  entrant2Id: number;
  winnerId: number;
  loserId: number;
  bracketId: string;
  entrant1PrereqType: string;
  entrant1PrereqId: number;
  entrant1PrereqCondition?: any;
  entrant2PrereqType: string;
  entrant2PrereqId: number;
  entrant2PrereqCondition?: any;
  wProgressionSeedId?: any;
  lProgressionSeedId?: any;
  wPlacement: number;
  lPlacement: number;
  wOverallPlacement: number;
  lOverallPlacement: number;
  lEligiblePhaseId?: any;
  wEligiblePhaseId?: any;
  unreachable: boolean;
  isTiebreak: boolean;
  type: number;
  crewPlayerCount?: any;
  identifier: string;
  round: number;
  callOrder: number;
  state: number;
  entrant1Score: number;
  entrant2Score: number;
  bestOf: number;
  totalGames: number;
  setGamesType: number;
  isLast: boolean;
  isGF: boolean;
  hasPlaceholder: boolean;
  entrant1Present: boolean;
  entrant2Present: boolean;
  adminViewedBy?: any;
  adminMessagedBy?: any;
  tasksPruned?: any;
  subState: SubState;
  modRequestedBy?: any;
  modRequestedAt?: any;
  vodUrl?: any;
  durationSeconds: number;
  createdAt: number;
  updatedAt: number;
  updatedAtMicro: number;
  startAt: number;
  startedAt: number;
  completedAt: number;
  adminViewedAt?: any;
  adminMessagedAt?: any;
  slots: Slot[];
  games: any[];
  videogameId: number;
  eventType: number;
  isProjection?: any;
  images: any[];
  expand: string[];
  displayRound: number;
  originalRound: number;
  fullRoundText: string;
  midRoundText: string;
  shortRoundText: string;
  roundDivision: number;
  phaseId: number;
}